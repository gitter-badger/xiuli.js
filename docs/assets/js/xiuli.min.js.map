{"version":3,"file":"xiuli.min.js","sources":["../../../src/matrix/util.js","../../../src/matrix/vec3.js","../../../src/matrix/mat4.js","../../../src/xiuli.js","../../../src/initializers.js","../../../src/main.js"],"sourcesContent":["/* global getComputedStyle */\n\nconst ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\n/**\n * Get CSS transform.\n *\n * @param {HTMLElement} el HTML element\n * @returns {string} transform\n */\nfunction getCSSStyles(el, ...properties) {\n  const style = getComputedStyle(el, null);\n  const result = {};\n  properties.forEach((value) => {\n    const property =\n      style.getPropertyValue(`-webkit-${value}`) ||\n      style.getPropertyValue(`-moz-${value}`) ||\n      style.getPropertyValue(`-ms-${value}`) ||\n      style.getPropertyValue(`-o-${value}`) ||\n      style.getPropertyValue(`${value}`) ||\n      'none';\n    result[value] = property;\n  });\n  return result;\n}\n\nexport { ARRAY_TYPE, getCSSStyles };\n","/* eslint no-param-reassign: [\"error\", { \"ignorePropertyModificationsFor\": [\"out\"]}] */\n/* eslint prefer-destructuring: [\"error\", {AssignmentExpression: {array: false}}] */\nimport { ARRAY_TYPE } from './util';\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  const out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n* Copy the values from one vec3 to another\n*\n* @param {vec3} a the source vector\n* @param {vec3} [out = new ARRAY_TYPE(3)] the receiving vector\n* @returns {vec3} out\n*/\nexport function copy(a, out = new ARRAY_TYPE(3)) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} a vector to negate\n * @param {vec3} [out = new ARRAY_TYPE(3)] the receiving vector\n * @returns {vec3} out\n */\nexport function negate(a, out = new ARRAY_TYPE(3)) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n","/* eslint no-param-reassign: [\"error\", {\"ignorePropertyModificationsFor\": [\"out\"]}] */\n/* eslint one-var-declaration-per-line: [\"off\"] */\n/* eslint one-var: [\"off\"] */\n/* eslint prefer-const: [\"off\"] */\n/* eslint no-mixed-operators: [\"off\"] */\n/* eslint prefer-destructuring: [\"error\", {AssignmentExpression: {array: false}}] */\n/* eslint-env es6 */\n/* eslint no-useless-escape: \"error\" */\n\nimport { ARRAY_TYPE, getCSSStyles } from './util';\n\n/**\n * Creates a new 4 x 4 identity Matrix.\n * @return {Mat4} a new 4 x 4 identity Matrix.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n* Copy the values from one mat4 to another\n*\n* @param {mat4} a the source matrix\n* @param {mat4} [out = new ARRAY_TYPE(16)] the receiving matrix\n* @returns {mat4} out\n*/\nexport function copy(a, out = new ARRAY_TYPE(16)) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n *\n * @param {vec3} v Translation vector\n * @param {mat4} [out = new ARRAY_TYPE(16)] out mat4 receiving operation result\n * @returns {mat4} out\n */\nexport function fromTranslation(v, out = create()) {\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  return out;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {mat4} [out = new ARRAY_TYPE(16)] the receiving matrix\n * @returns {mat4} out\n */\nexport function multiply(a, b, out = new ARRAY_TYPE(16)) {\n  const a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3],\n    a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7],\n    a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11],\n    a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n\n  out[0] = (b0 * a00) + (b1 * a10) + (b2 * a20) + (b3 * a30);\n  out[1] = (b0 * a01) + (b1 * a11) + (b2 * a21) + (b3 * a31);\n  out[2] = (b0 * a02) + (b1 * a12) + (b2 * a22) + (b3 * a32);\n  out[3] = (b0 * a03) + (b1 * a13) + (b2 * a23) + (b3 * a33);\n\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = (b0 * a00) + (b1 * a10) + (b2 * a20) + (b3 * a30);\n  out[5] = (b0 * a01) + (b1 * a11) + (b2 * a21) + (b3 * a31);\n  out[6] = (b0 * a02) + (b1 * a12) + (b2 * a22) + (b3 * a32);\n  out[7] = (b0 * a03) + (b1 * a13) + (b2 * a23) + (b3 * a33);\n\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = (b0 * a00) + (b1 * a10) + (b2 * a20) + (b3 * a30);\n  out[9] = (b0 * a01) + (b1 * a11) + (b2 * a21) + (b3 * a31);\n  out[10] = (b0 * a02) + (b1 * a12) + (b2 * a22) + (b3 * a32);\n  out[11] = (b0 * a03) + (b1 * a13) + (b2 * a23) + (b3 * a33);\n\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = (b0 * a00) + (b1 * a10) + (b2 * a20) + (b3 * a30);\n  out[13] = (b0 * a01) + (b1 * a11) + (b2 * a21) + (b3 * a31);\n  out[14] = (b0 * a02) + (b1 * a12) + (b2 * a22) + (b3 * a32);\n  out[15] = (b0 * a03) + (b1 * a13) + (b2 * a23) + (b3 * a33);\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} a the source matrix\n * @param {mat4} [out = new ARRAY_TYPE(16)] the receiving matrix\n * @returns {mat4} out\n */\nexport function invert(a, out = new ARRAY_TYPE(16)) {\n  const a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3],\n    a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7],\n    a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11],\n    a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15],\n\n    b00 = (a00 * a11) - (a01 * a10),\n    b01 = (a00 * a12) - (a02 * a10),\n    b02 = (a00 * a13) - (a03 * a10),\n    b03 = (a01 * a12) - (a02 * a11),\n    b04 = (a01 * a13) - (a03 * a11),\n    b05 = (a02 * a13) - (a03 * a12),\n    b06 = (a20 * a31) - (a21 * a30),\n    b07 = (a20 * a32) - (a22 * a30),\n    b08 = (a20 * a33) - (a23 * a30),\n    b09 = (a21 * a32) - (a22 * a31),\n    b10 = (a21 * a33) - (a23 * a31),\n    b11 = (a22 * a33) - (a23 * a32);\n\n  // Calculate the determinant\n  let det =\n    (b00 * b11) - (b01 * b10) + (b02 * b09) + (b03 * b08) - (b04 * b07) + (b05 * b06);\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ((a11 * b11) - (a12 * b10) + (a13 * b09)) * det;\n  out[1] = ((a02 * b10) - (a01 * b11) - (a03 * b09)) * det;\n  out[2] = ((a31 * b05) - (a32 * b04) + (a33 * b03)) * det;\n  out[3] = ((a22 * b04) - (a21 * b05) - (a23 * b03)) * det;\n  out[4] = ((a12 * b08) - (a10 * b11) - (a13 * b07)) * det;\n  out[5] = ((a00 * b11) - (a02 * b08) + (a03 * b07)) * det;\n  out[6] = ((a32 * b02) - (a30 * b05) - (a33 * b01)) * det;\n  out[7] = ((a20 * b05) - (a22 * b02) + (a23 * b01)) * det;\n  out[8] = ((a10 * b10) - (a11 * b08) + (a13 * b06)) * det;\n  out[9] = ((a01 * b08) - (a00 * b10) - (a03 * b06)) * det;\n  out[10] = ((a30 * b04) - (a31 * b02) + (a33 * b00)) * det;\n  out[11] = ((a21 * b02) - (a20 * b04) - (a23 * b00)) * det;\n  out[12] = ((a11 * b07) - (a10 * b09) - (a12 * b06)) * det;\n  out[13] = ((a00 * b09) - (a01 * b07) + (a02 * b06)) * det;\n  out[14] = ((a31 * b01) - (a30 * b03) - (a32 * b00)) * det;\n  out[15] = ((a20 * b03) - (a21 * b01) + (a22 * b00)) * det;\n\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(a, rad, axis, out = new ARRAY_TYPE(16)) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (Math.abs(len) < 0.000001) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Creates a new 4 x 4 Matrix from CSS transform.\n *\n * @param {string} transform CSS transform\n * @returns {Mat4} out\n */\nexport function fromCSSTransform(transform) {\n  const re = /\\(|\\)|, |\\s/g,\n    values = transform.split(re),\n    matrix = create();\n\n  if (values[0] === 'matrix') {\n    matrix[0] = parseFloat(values[1]);\n    matrix[1] = parseFloat(values[2]);\n    matrix[4] = parseFloat(values[3]);\n    matrix[5] = parseFloat(values[4]);\n    matrix[12] = parseFloat(values[5]);\n    matrix[13] = parseFloat(values[6]);\n  } else if (values[0] === 'matrix3d') {\n    copy(values.slice(1, 17).map(v => parseFloat(v)), matrix);\n  }\n  return matrix;\n}\n\n/**\n * Creates a new 4 x 4 Matrix from CSS transform.\n *\n * @param {HTMLElement} el CSS transform\n * @returns {Mat4} out\n */\nexport function fromElement(el) {\n  const { transform } = getCSSStyles(el, 'transform'),\n    matrix = fromCSSTransform(transform);\n  return matrix;\n}\n\n/**\n * Convert Mat4 to CSS transform.\n *\n * @param {Mat4} transform 4 x 4 Matrix\n * @returns {string} CSS transform\n */\nexport function toCssTransform(transform) {\n  return `matrix3d(${transform.join(',')})`;\n}\n","/* global document */\n/* eslint no-param-reassign: [\"error\", {\"ignorePropertyModificationsFor\": [\"out\"]}] */\n\nimport { Mat4, Vec3, getCSSStyles } from './matrix';\n\nexport default class Xiuli {\n  constructor(mainContainer = 'xiuli', TFun = undefined) {\n    this.main = document.getElementById(mainContainer);\n    this.main.style.position = 'absolute';\n    this.main.style.transformStyle = 'preserve-3d';\n    const { 'transition-duration': transitionDuration } =\n     getCSSStyles(this.main, 'transition', 'transition-duration');\n    if (transitionDuration === '0s') {\n      this.main.style.transitionDuration = '2s';\n      this.main.style.WebkitTransitionDuration = '2s';\n    }\n    this.root = this.main.parentElement;\n    this.callback = null;\n    this.data = null;\n    this.main.addEventListener(\n      'transitionend',\n      () => {\n        if (this.callback) {\n          this.callback(this.elementIds[this.current], this.data);\n          this.data = null;\n        }\n      },\n      false,\n    );\n    this.mainTrans = Mat4.fromElement(this.main);\n    this.init(TFun);\n  }\n\n  init(TFun = undefined) {\n    this.TFun = TFun;\n    this.elementIds = [];\n    this.current = -1;\n    this.elements = {};\n    this.xiulies = this.main.querySelectorAll('[data-xiuli]');\n    if (this.TFun instanceof Function) {\n      Array.prototype.forEach.call(this.xiulies, (el, i, els) => {\n        let secTr = Mat4.create();\n        secTr = this.TFun(secTr, i, els);\n        el.style.transform = Mat4.toCssTransform(secTr);\n      });\n    }\n    Array.prototype.forEach.call(this.xiulies, (el, i) => {\n      let move = false;\n      if (i === 0) {\n        move = true;\n      }\n      this.add(el, move);\n    });\n  }\n\n  add(el, move) {\n    const { transform, 'transform-origin': transformOrigin } = getCSSStyles(el, 'transform', 'transform-origin');\n    const re = /[-+]?[0-9]*\\.?[0-9]+/g;\n    const [x = 0.0, y = 0.0, z = 0.0] = transformOrigin.match(re);\n    const secTr = Mat4.fromCSSTransform(transform);\n    const TrVec = Vec3.fromValues(x, y, z);\n    const TrMat = Mat4.fromTranslation(TrVec);\n    Mat4.multiply(TrMat, secTr, secTr);\n    Vec3.negate(TrVec, TrVec);\n    const w = this.root.offsetWidth;\n    const h = this.root.offsetHeight;\n    TrVec[0] -= ((w - el.offsetWidth) / 2);\n    TrVec[1] -= ((h - el.offsetHeight) / 2);\n    Mat4.fromTranslation(TrVec, TrMat);\n    Mat4.multiply(secTr, TrMat, secTr);\n\n    Mat4.invert(secTr, secTr);\n    Mat4.multiply(this.mainTrans, secTr, secTr);\n\n    this.elements[el.id] = Mat4.toCssTransform(secTr);\n    this.elementIds.push(el.id);\n    if (move) {\n      this.goto(el.id, null);\n    }\n  }\n  onTransitionend(fn) {\n    this.callback = fn;\n  }\n  goto(tId, data) {\n    const i = this.elementIds.indexOf(tId);\n    if (i !== -1) {\n      this.main.style.transform = this.elements[tId];\n      this.data = data;\n      this.current = i;\n    }\n  }\n\n  pre(data) {\n    this.current -= 1;\n    if (this.current < 0) {\n      this.current = this.elementIds.length - 1;\n    }\n    const tId = this.elementIds[this.current];\n    this.goto(tId, data);\n  }\n\n  next(data) {\n    this.current += 1;\n    if (this.current >= this.elementIds.length) {\n      this.current = 0;\n    }\n    const tId = this.elementIds[this.current];\n    this.goto(tId, data);\n  }\n}\n","import { Mat4, Vec3 } from './matrix';\n\nexport function steps(secTr, i) {\n  const tr = secTr;\n  tr[12] = 600;\n  tr[13] = -400 * i;\n  tr[14] = -400 * i;\n  return tr;\n}\n\nexport function circular(secTr, i) {\n  const thita = (6.28319 * (i)) / 6;\n  const tr = secTr;\n  tr[12] = 600 * Math.sin(thita);\n  tr[13] = 200;\n  tr[14] = 800 * (Math.cos(thita) - 1);\n  return tr;\n}\n\nexport function spiralSteps(secTr, i, els) {\n  const tr = secTr;\n  const thita = (6.28319 * (i)) / els.length;\n  Mat4.rotate(secTr, thita - 1.5708, Vec3.fromValues(0, 1, 0), secTr);\n  tr[12] = 500 * Math.sin(thita);\n  tr[13] = -400 * i;\n  tr[14] = 500 * (Math.cos(thita) - 1);\n  return tr;\n}\n\nexport function spiralRotated(secTr, i) {\n  const tr = secTr;\n  const thita = (6.28319 * (i)) / 6;\n  Mat4.rotate(secTr, thita, Vec3.fromValues(0, 1, 0), secTr);\n  tr[12] = 600 * Math.sin(thita);\n  tr[13] = 200 * i;\n  tr[14] = 600 * (Math.cos(thita) - 1);\n  return secTr;\n}\n\nexport function poly(secTr, i) {\n  const tr = secTr;\n  const thita = (6.28319 * (i)) / 6;\n  Mat4.rotate(secTr, thita, Vec3.fromValues(0, 1, 0), secTr);\n  tr[12] = 600 * Math.sin(thita);\n  tr[13] = 200;\n  tr[14] = 600 * (Math.cos(thita) - 1);\n  return secTr;\n}\n","import Xiuli from './xiuli';\nimport * as initializers from './initializers';\n\nXiuli.initializers = initializers;\n\nexport default Xiuli;\n"],"names":["ARRAY_TYPE","Float32Array","Array","getCSSStyles","el","style","getComputedStyle","result","properties","forEach","value","property","getPropertyValue","fromValues","x","y","z","out","fromTranslation","v","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","rotate","rad","axis","s","c","t","b00","b01","b02","b10","b11","b12","b20","b21","b22","len","Math","sqrt","abs","sin","cos","fromCSSTransform","transform","values","split","matrix","parseFloat","slice","map","toCssTransform","join","Xiuli","mainContainer","TFun","undefined","main","document","getElementById","position","transformStyle","this","transitionDuration","WebkitTransitionDuration","root","parentElement","callback","data","addEventListener","_this","elementIds","current","mainTrans","init","elements","xiulies","querySelectorAll","Function","prototype","call","i","els","secTr","_this2","Mat4","move","add","match","TrVec","Vec3","TrMat","w","offsetWidth","h","offsetHeight","b03","b04","b05","b06","b07","b08","b09","det","id","push","goto","fn","tId","indexOf","length","tr","thita","initializers"],"mappings":"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"}